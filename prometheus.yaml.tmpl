global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    cluster: 'CLUSTER'

rule_files:
  - /opt/prometheus/conf/rules/*.rules
  - /opt/prometheus/conf/alerts/*.rules

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'marathon'
    scrape_interval: 5s
    marathon_sd_configs:
    - servers:
      - MARATHON_URL

    relabel_configs:
    # Drop anything with a promexclude label
    - source_labels: ['__meta_marathon_app_label_promexclude']
      regex:         '(.+)'
      action:        drop
    - source_labels: ['__meta_marathon_app']
      regex:         '/?(.*)'
      replacement:   '${1}'
      target_label:  'job'
    - source_labels: ['__meta_marathon_task']
      regex:         '(.*)'
      replacement:   '${1}'
      target_label:  'mesos_task_id'
    - action:        labelmap
      regex:         '__meta_marathon_app_label_(.+)'

  - job_name: 'mesos-default'
    file_sd_configs:
      - files: ['/opt/prometheus/conf/mesos-groups/*.json']
    metric_relabel_configs:
    - source_labels: ['__name__'] # cardinality is too higha, historical don't get cleaned up
      regex:         'mesos_slave_task_state_time'
      action:        drop
    - source_labels: ['id']
      regex:         '(.+)'
      replacement:   '${1}'
      target_label:  'mesos_task_id'
    - source_labels: ['id']
      regex:         '(.+)'
      replacement:   ''
      target_label:  'id'
    - source_labels: ['framework_id']
      regex:         '(.*)'
      replacement:   ''
      target_label:  'framework_id'
    - source_labels: ['source']
      regex:         '(.*)'
      replacement:   ''
      target_label:  'source'

